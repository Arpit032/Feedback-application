{"ast":null,"code":"var _jsxFileName = \"D:\\\\feedback-application\\\\src\\\\components\\\\FeedbackContext.jsx\";\nimport React from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { createContext, useState } from 'react';\n//component names should always start with a capital l\n//creating a context\nexport const FeedbackContext = createContext();\n//we're gonna wrap our prop states components in this provider\nexport const FeedbackProvider = ({\n  children\n}) => {\n  const [feedback, setFeedback] = useState([{\n    id: 1,\n    rating: 10,\n    text: \"this is a text\"\n  }]);\n  const updtEdit = (id, updtFeed) => {\n    setf;\n\n    //console.log(id,updtFeed)\n  };\n  //to edit the card store in this state\n  //feedEdit is the object that stores the info of new updated \n  const [feedEdit, setFeedEdit] = useState({\n    //item stores the new edited info - rating,id,text\n    //if edit is false that means no one has clicked it yet\n    item: {},\n    edit: false\n  });\n\n  //actual function to edit\n  const editFeedback = item => {\n    setFeedEdit({\n      item: item,\n      edit: true\n    });\n  };\n  const handleadd = newFeed => {\n    newFeed.id = uuid();\n    setFeedback([newFeed, ...feedback]);\n  };\n  const handledelete = id => {\n    if (window.confirm('delete this?')) {\n      setFeedback(feedback.filter(item => item.id !== id));\n    }\n  };\n  return /*#__PURE__*/React.createElement(FeedbackContext.Provider, {\n    value: {\n      feedback,\n      handledelete,\n      handleadd,\n      editFeedback,\n      feedEdit,\n      updtEdit\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default FeedbackProvider;","map":{"version":3,"names":["React","v4","uuid","createContext","useState","FeedbackContext","FeedbackProvider","children","feedback","setFeedback","id","rating","text","updtEdit","updtFeed","setf","feedEdit","setFeedEdit","item","edit","editFeedback","handleadd","newFeed","handledelete","window","confirm","filter","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/feedback-application/src/components/FeedbackContext.jsx"],"sourcesContent":["import React from 'react'\r\nimport {v4 as uuid} from 'uuid'\r\nimport { createContext,useState } from 'react'\r\n//component names should always start with a capital l\r\n//creating a context\r\nexport const FeedbackContext = createContext()\r\n//we're gonna wrap our prop states components in this provider\r\nexport const FeedbackProvider = ({children})=>{\r\n    const [feedback, setFeedback] = useState([\r\n        {\r\n            id : 1,\r\n            rating: 10,\r\n            text: \"this is a text\"\r\n        },\r\n    ]\r\n\r\n    )\r\n\r\n    const updtEdit = (id,updtFeed) =>{\r\n\r\n        setf\r\n\r\n        //console.log(id,updtFeed)\r\n\r\n    }\r\n        //to edit the card store in this state\r\n        //feedEdit is the object that stores the info of new updated \r\n    const[feedEdit, setFeedEdit] = useState({\r\n        //item stores the new edited info - rating,id,text\r\n        //if edit is false that means no one has clicked it yet\r\n        item : {},\r\n        edit: false\r\n\r\n    })\r\n\r\n      //actual function to edit\r\n      const editFeedback = (item) => {\r\n        setFeedEdit({\r\n            item: item,\r\n            edit: true\r\n        })\r\n        \r\n      }\r\n\r\n   \r\n    const handleadd = (newFeed) =>{\r\n        newFeed.id= uuid()\r\n        setFeedback([newFeed,...feedback])\r\n    }\r\n    const handledelete = (id)=> {\r\n        if(window.confirm('delete this?')){\r\n              setFeedback(feedback.filter((item)=>item.id!==id))\r\n        }\r\n     }\r\n\r\n    \r\n    \r\n\r\n\r\n    return (\r\n    <FeedbackContext.Provider value={{\r\n        feedback, handledelete, handleadd, editFeedback, feedEdit, updtEdit\r\n    }}>\r\n    \r\n    {children}\r\n    \r\n    </FeedbackContext.Provider>\r\n    )\r\n}\r\n    \r\n    \r\n\r\n\r\nexport default FeedbackProvider"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,EAAE,IAAIC,IAAI,QAAO,MAAM;AAC/B,SAASC,aAAa,EAACC,QAAQ,QAAQ,OAAO;AAC9C;AACA;AACA,OAAO,MAAMC,eAAe,GAAGF,aAAa,CAAC,CAAC;AAC9C;AACA,OAAO,MAAMG,gBAAgB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAG;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CACrC;IACIM,EAAE,EAAG,CAAC;IACNC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACV,CAAC,CAGL,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAACH,EAAE,EAACI,QAAQ,KAAI;IAE7BC,IAAI;;IAEJ;EAEJ,CAAC;EACG;EACA;EACJ,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACpC;IACA;IACAc,IAAI,EAAG,CAAC,CAAC;IACTC,IAAI,EAAE;EAEV,CAAC,CAAC;;EAEA;EACA,MAAMC,YAAY,GAAIF,IAAI,IAAK;IAC7BD,WAAW,CAAC;MACRC,IAAI,EAAEA,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CAAC;EAEJ,CAAC;EAGH,MAAME,SAAS,GAAIC,OAAO,IAAI;IAC1BA,OAAO,CAACZ,EAAE,GAAER,IAAI,CAAC,CAAC;IAClBO,WAAW,CAAC,CAACa,OAAO,EAAC,GAAGd,QAAQ,CAAC,CAAC;EACtC,CAAC;EACD,MAAMe,YAAY,GAAIb,EAAE,IAAI;IACxB,IAAGc,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,EAAC;MAC5BhB,WAAW,CAACD,QAAQ,CAACkB,MAAM,CAAER,IAAI,IAAGA,IAAI,CAACR,EAAE,KAAGA,EAAE,CAAC,CAAC;IACxD;EACH,CAAC;EAMF,oBACAV,KAAA,CAAA2B,aAAA,CAACtB,eAAe,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAC7BrB,QAAQ;MAAEe,YAAY;MAAEF,SAAS;MAAED,YAAY;MAAEJ,QAAQ;MAAEH;IAC/D,CAAE;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAED5B,QAEyB,CAAC;AAE/B,CAAC;AAKD,eAAeD,gBAAgB"},"metadata":{},"sourceType":"module"}