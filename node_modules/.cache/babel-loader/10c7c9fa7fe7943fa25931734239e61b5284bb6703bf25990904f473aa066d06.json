{"ast":null,"code":"var _jsxFileName = \"D:\\\\feedback-application\\\\src\\\\App.js\";\nimport header from \"./components/header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction hello() {\n  const arr = [{\n    id: 1,\n    Text: \"comment 1\"\n  }, {\n    id: 2,\n    Text: \"comment 2\"\n  }, {\n    id: 3,\n    Text: \"comment 3\"\n  }];\n  const commentblock = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [\"Comments(\", arr.length, \")\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: arr.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment.Text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 31\n  }, this);\n  const flag = true;\n  //by default you can only return one parent jsx therefore u cant have for eg. <h1></h1> and <p>\n  //to resolve this u can either contain all elements in a div or just use empty fragments <></>\n\n  if (flag) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentblock\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\nexport default hello;","map":{"version":3,"names":["header","jsxDEV","_jsxDEV","hello","arr","id","Text","commentblock","className","children","length","map","comment","index","fileName","_jsxFileName","lineNumber","columnNumber","flag"],"sources":["D:/feedback-application/src/App.js"],"sourcesContent":["import header from \"./components/header\"\r\n\r\nfunction hello(){\r\n        \r\n        const arr=[\r\n            {id:1, Text : \"comment 1\"},\r\n            {id:2, Text : \"comment 2\"},\r\n            {id:3, Text : \"comment 3\"}\r\n        ]\r\n\r\n        const commentblock = (<div className=\"Container\">\r\n           \r\n        Comments({arr.length})\r\n        <ul>\r\n        {arr.map((comment,index)=>(\r\n            <li key={index}>\r\n            {comment.Text}\r\n            \r\n            </li>\r\n    \r\n        ))}\r\n        \r\n        </ul>\r\n            \r\n            \r\n            </div>)\r\n    \r\n    const flag = true   \r\n    //by default you can only return one parent jsx therefore u cant have for eg. <h1></h1> and <p>\r\n    //to resolve this u can either contain all elements in a div or just use empty fragments <></>\r\n\r\n    if(flag)\r\n    return (\r\n        <div>\r\n\r\n        {}\r\n        {commentblock}\r\n        \r\n        \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default hello\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAE;EAER,MAAMC,GAAG,GAAC,CACN;IAACC,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAG;EAAW,CAAC,EAC1B;IAACD,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAG;EAAW,CAAC,EAC1B;IAACD,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAG;EAAW,CAAC,CAC7B;EAED,MAAMC,YAAY,gBAAIL,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAC,QAAA,GAAC,WAExC,EAACL,GAAG,CAACM,MAAM,EAAC,GACrB,eAAAR,OAAA;MAAAO,QAAA,EACCL,GAAG,CAACO,GAAG,CAAC,CAACC,OAAO,EAACC,KAAK,kBACnBX,OAAA;QAAAO,QAAA,EACCG,OAAO,CAACN;MAAI,GADJO,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGI,CAAE;EAEf,MAAMC,IAAI,GAAG,IAAI;EACjB;EACA;;EAEA,IAAGA,IAAI,EACP,oBACIhB,OAAA;IAAAO,QAAA,EAGCF;EAAY;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGR,CAAC;AAGd;AAEA,eAAed,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}