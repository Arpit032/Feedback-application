{"ast":null,"code":"var _jsxFileName = \"D:\\\\feedback-application\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Header from \"./components/header\";\nimport Feedbacklist from \"./components/Feedbacklist\";\nimport FeedbackData from \"./Data/FeedbackData\";\nimport RatingSet from \"./components/RatingSet\";\nimport FeedbackForm from \"./components/FeedbackForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Hello() {\n  _s();\n  //this is the use state hook in which feedback is a state variable and setFeedback is a function, initially the value of state variable feedback is set to FeedbackData\n  const [feedback, setFeedback] = useState(FeedbackData);\n  //Feedbacklist down there is an instace of the component and feed is a prop, here inside the feed prop we're declaring the state variable feedback declared above with the initial state as FeedbackData\n\n  const handledelete = id => {\n    if (window.confirm('delete this?')) {\n      setFeedback(feedback.filter(item => item.id !== id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"Feedback UI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackForm, {\n      handleadd: handleadd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RatingSet, {\n      classname: \"rating\",\n      FeedbackData: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Feedbacklist, {\n        feed: feedback,\n        handledelete: handledelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Hello, \"9jR6RJseGcvW+jW5X/sg38pDeqs=\");\n_c = Hello;\nexport default Hello;\nvar _c;\n$RefreshReg$(_c, \"Hello\");","map":{"version":3,"names":["useState","Header","Feedbacklist","FeedbackData","RatingSet","FeedbackForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Hello","_s","feedback","setFeedback","handledelete","id","window","confirm","filter","item","children","text","fileName","_jsxFileName","lineNumber","columnNumber","handleadd","classname","feed","_c","$RefreshReg$"],"sources":["D:/feedback-application/src/App.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport Header from \"./components/header\"\r\nimport Feedbacklist from \"./components/Feedbacklist\"\r\nimport FeedbackData from \"./Data/FeedbackData\"\r\nimport RatingSet from \"./components/RatingSet\"\r\nimport FeedbackForm from \"./components/FeedbackForm\"\r\nfunction Hello(){\r\n    \r\n    //this is the use state hook in which feedback is a state variable and setFeedback is a function, initially the value of state variable feedback is set to FeedbackData\r\n    const [feedback, setFeedback]= useState(FeedbackData)\r\n    //Feedbacklist down there is an instace of the component and feed is a prop, here inside the feed prop we're declaring the state variable feedback declared above with the initial state as FeedbackData\r\n\r\n    \r\n\r\n    const handledelete = (id)=> {\r\n       if(window.confirm('delete this?')){\r\n             setFeedback(feedback.filter((item)=>item.id!==id))\r\n       }\r\n    }\r\nreturn (\r\n    <>\r\n    <Header text=\"Feedback UI\"/>\r\n    <FeedbackForm handleadd={handleadd}/>\r\n   \r\n    <RatingSet classname='rating' FeedbackData={feedback}/>\r\n    \r\n        \r\n        <div>\r\n        \r\n        <Feedbacklist feed={feedback} handledelete = {handledelete}/>\r\n        </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Hello\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACpD,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAEZ;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAEb,QAAQ,CAACG,YAAY,CAAC;EACrD;;EAIA,MAAMW,YAAY,GAAIC,EAAE,IAAI;IACzB,IAAGC,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,EAAC;MAC5BJ,WAAW,CAACD,QAAQ,CAACM,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACJ,EAAE,KAAGA,EAAE,CAAC,CAAC;IACxD;EACH,CAAC;EACL,oBACIR,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACAb,OAAA,CAACN,MAAM;MAACoB,IAAI,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5BlB,OAAA,CAACF,YAAY;MAACqB,SAAS,EAAEA;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAErClB,OAAA,CAACH,SAAS;MAACuB,SAAS,EAAC,QAAQ;MAACxB,YAAY,EAAES;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAGnDlB,OAAA;MAAAa,QAAA,eAEAb,OAAA,CAACL,YAAY;QAAC0B,IAAI,EAAEhB,QAAS;QAACE,YAAY,EAAIA;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA,eACJ,CAAC;AAGX;AAACd,EAAA,CA5BQD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA8Bd,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}